{"version":3,"file":"static/js/Meal.014452cd.chunk.js","mappings":"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","sources":["pages/List/components/Card.tsx","pages/List/components/SearchBar.tsx","pages/List/components/Buttons.tsx","pages/List/components/Filter.tsx","pages/List/components/Category.tsx","pages/List/components/Indicator.tsx","pages/List/components/SelectFilter.tsx","pages/List/components/SelectGroup.tsx","pages/Meal/components/Buttons.tsx","pages/Meal/components/SelectType.tsx","pages/Meal/components/SelectSize.tsx","pages/Meal/components/SelectIngredient.tsx","pages/Meal/components/SelectIngredientCount.tsx","pages/Meal/components/ToolBar.tsx","pages/Meal/components/CardBody.tsx","pages/Meal/components/Card.tsx","pages/Meal/Meal.tsx"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Pokemon, Type, TypeBgClass } from '@/types';\nimport { Icon } from '@/components';\n\nexport function Card({ pm }: { pm: Pokemon }) {\n  return (\n    <div className='flex w-full flex-col items-center gap-1 p-2'>\n      <p className='font-bold'>No. {pm.pid.slice(-3)}</p>\n      <div\n        className={clsx(\n          'relative h-16 w-16 overflow-hidden rounded-full',\n          'outline outline-2 outline-white',\n          TypeBgClass[Type[pm.type as keyof typeof Type] as keyof typeof TypeBgClass],\n        )}\n      >\n        <Icon.Game.Pm pm={pm} />\n      </div>\n      <p className='text-base'>{pm.name}</p>\n      <p className='flex items-center text-xs'>\n        {pm.sleep_type} - {pm.specialty}\n      </p>\n      <p className='flex'>\n        {new Array(pm.berry_quantity).fill(0).map((_, index) => (\n          <span className='relative h-8 w-8' key={index}>\n            <Icon.Game.Berry name={pm.berry} />\n          </span>\n        ))}\n      </p>\n      {pm.ingredients.length > 0 && (\n        <p className='flex'>\n          {pm.ingredients.map((ingredient) => (\n            <span className='relative h-8 w-8' key={ingredient}>\n              <Icon.Game.Ingredient name={ingredient} />\n            </span>\n          ))}\n        </p>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n};\n\nexport function SearchBar({ value, onChange }: Props) {\n  return (\n    <>\n      <div className='relative w-full'>\n        <div className='pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3'>\n          <Icon.Search className='h-5 w-5' />\n        </div>\n        <input\n          type='search'\n          className={clsx(\n            'block w-full rounded-lg border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900',\n          )}\n          placeholder='搜尋名稱'\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxItem, CheckboxTextItem } from '@/components';\n\ntype Props = {\n  checkSet: Set<string>;\n  list: string[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  Icon?: ({ name, size = 'h-8 w-8' }: { name: string; size?: string }) => JSX.Element;\n  prefixKey?: string;\n};\n\nexport function Buttons({ list, checkSet, Icon, handleChange, prefixKey }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxItem\n          key={item}\n          label={item}\n          checked={checkSet.has(item)}\n          onChange={handleChange}\n          prefixKey={prefixKey}\n        >\n          {Icon && <Icon name={item} size={'h-10 w-10'} />}\n        </CheckboxItem>\n      ))}\n    </div>\n  );\n}\n\ntype TextProps = {\n  select: string | null;\n  list: { key: string; name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function TextButtons({ list, select, handleChange }: TextProps) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.key}\n          label={item}\n          checked={(select === null && item.key === 'none') || select === item.key}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Filter({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'filter'}\n        id={'filter'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'filter'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Filter className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Category({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'category'}\n        id={'category'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'category'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Category className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","export function Indicator() {\n  return <span className='absolute -top-1 left-4 h-3 w-3 rounded-full bg-custom-green'></span>;\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { Icon, SubTitleSlide, Toggle } from '@/components';\n\nimport { berries, ingredients, skills, specialties, areas } from '@/data';\n\nimport { Buttons } from './Buttons';\nimport { Filter, checkKeys, groupByKeys } from '../List';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (key: groupByKeys) => (event: ChangeEvent<HTMLInputElement>) => void;\n  handleFirstChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleCheckChange: (key: checkKeys) => (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectFilter({\n  filter,\n  handleChickChange,\n  handleFirstChange,\n  handleCheckChange,\n}: Props) {\n  return (\n    <>\n      <div className='flex gap-x-4'>\n        <Toggle\n          text='使用卡比獸的區域'\n          checked={filter.isUseSnorlaxLocations}\n          handleChange={handleCheckChange('isUseSnorlaxLocations')}\n        />\n        <Toggle\n          text='使用卡比獸的樹果'\n          checked={filter.isUseSnorlaxBerries}\n          handleChange={handleCheckChange('isUseSnorlaxBerries')}\n        />\n      </div>\n      <div\n        className={clsx(\n          'origin-top space-y-4 overflow-hidden transition-all duration-300',\n          filter.displayFilter ? 'mb-4 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n        )}\n      >\n        <SubTitleSlide title='篩選：樹果' />\n\n        <Buttons\n          list={berries.map((berry) => berry.name)}\n          Icon={Icon.Game.Berry}\n          checkSet={filter.berries}\n          handleChange={handleChickChange('berries')}\n        />\n\n        <SubTitleSlide title='篩選：食材' />\n        <Toggle\n          text='只挑選第一食材'\n          checked={filter.onlyFirstIngredient}\n          handleChange={handleFirstChange}\n        />\n        <Buttons\n          list={ingredients.map((ingredient) => ingredient.name)}\n          Icon={Icon.Game.Ingredient}\n          checkSet={filter.ingredients}\n          handleChange={handleChickChange('ingredients')}\n        />\n\n        <SubTitleSlide title='篩選：專長' />\n        <Buttons\n          list={specialties}\n          checkSet={filter.specialties}\n          handleChange={handleChickChange('specialties')}\n        />\n\n        <SubTitleSlide title='篩選：主技能' />\n        <Buttons\n          list={skills}\n          checkSet={filter.skills}\n          handleChange={handleChickChange('skills')}\n        />\n\n        <SubTitleSlide title='篩選：區域' />\n        <Buttons\n          list={areas}\n          checkSet={filter.locations}\n          handleChange={handleChickChange('locations')}\n        />\n      </div>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { SubTitleSlide } from '@/components';\nimport { Filter } from '../List';\nimport { TextButtons } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleGroupByChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectGroup({ filter, handleGroupByChange }: Props) {\n  const groupBySelect = [\n    { key: 'none', name: '無' },\n    { key: 'sleep_type', name: '睡眠分類' },\n    { key: 'berry', name: '樹果' },\n    { key: 'ingredients', name: '食材' + (filter.onlyFirstIngredient ? '(第一食材)' : '') },\n    { key: 'specialty', name: '專長' },\n    { key: 'skill', name: '主技能' },\n    { key: 'type', name: '屬性' },\n    { key: 'level', name: '卡比獸等級' },\n  ];\n\n  return (\n    <div\n      className={clsx(\n        'origin-top space-y-4 overflow-hidden transition-all duration-300',\n        filter.displayGroupBy ? 'mb-2 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n      )}\n    >\n      <SubTitleSlide title='分組方式' />\n      <TextButtons\n        list={groupBySelect}\n        select={filter.groupBy}\n        handleChange={handleGroupByChange}\n      />\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxTextItem } from '@/components';\n\ntype Props = {\n  select: string | null;\n  list: { name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function TextButtons({ list, select, handleChange }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.name}\n          label={{ key: item.name, name: item.name }}\n          checked={select === item.name}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n\ntype PlusMinusProps = {\n  n: number;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function PlusMinus({ n, handleSizeChange }: PlusMinusProps) {\n  const displayNum = n > 3 ? 'x2' : n > 0 ? `+${n}` : n;\n  return (\n    <button\n      type='button'\n      className='h-8 w-8 rounded-full bg-amber-100 shadow-list-items'\n      onClick={() => handleSizeChange(n)}\n    >\n      {displayNum}\n    </button>\n  );\n}\n\ntype SelectCountProps = {\n  name: string;\n  n: number;\n  min: number;\n  selected: boolean;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function SelectCount({ name, n, min, selected, handleCountChange }: SelectCountProps) {\n  return (\n    <button\n      type='button'\n      className={clsx(\n        'h-8 w-8 rounded-full',\n        'shadow-list-items',\n        selected ? 'bg-amber-300' : 'bg-amber-100',\n      )}\n      onClick={() => handleCountChange(name, n)}\n    >\n      {n > 0 ? `${n}` : `<${min}`}\n    </button>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { SubTitleSlide } from '@/components';\nimport { TextButtons } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectType({ filter, handleInputChange }: Props) {\n  const types = [{ name: '咖哩' }, { name: '沙拉' }, { name: '飲料、點心' }];\n\n  return (\n    <div className={'h-full space-y-4'}>\n      <SubTitleSlide title='料理種類' />\n      <TextButtons list={types} select={filter.type} handleChange={handleInputChange} />\n    </div>\n  );\n}\n","import { SubTitleSlide } from '@/components';\nimport { PlusMinus } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function SelectSize({ filter, handleSizeChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='鍋子容量' />\n      <div className='flex items-center gap-3 pl-2 text-center font-bold'>\n        <PlusMinus n={-3} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={-1} handleSizeChange={handleSizeChange} />\n        <p className='flex h-12 w-12 flex-col justify-center rounded-full bg-amber-300 shadow-list-items'>\n          <span>{filter.size}</span>\n        </p>\n        <PlusMinus n={1} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={3} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={filter.size} handleSizeChange={handleSizeChange} />\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Buttons } from '@/pages/List/components';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients } from '@/data';\n\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectIngredient({ filter, handleChickChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材' />\n      <Buttons\n        list={ingredients.map((ingredient) => ingredient.name)}\n        Icon={Icon.Game.Ingredient}\n        checkSet={filter.ingredients}\n        handleChange={handleChickChange}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients, meals } from '@/data';\n\nimport { Filter } from '../Meal';\nimport { SelectCount } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleCountChange: (name: string, count: number) => void;\n};\n\ntype IngredientsCount = {\n  count: number; // -1 is not enough\n  list: number[];\n};\n\nconst ingredientMap = Object.fromEntries(\n  ingredients.map((ingredient) => [ingredient.name, ingredient.point]),\n);\n\nconst getCountList = (filter: Filter): Record<string, IngredientsCount> => {\n  return Object.fromEntries(\n    ingredients\n      .filter((ingredient) => filter.ingredients.has(ingredient.name))\n      .map((ingredient) => {\n        const countList = meals\n          .filter(\n            (meal) =>\n              meal.type === filter.type &&\n              meal.ingredients.reduce((sum, item) => sum + item.count, 0) <= filter.size &&\n              meal.ingredients.every((item) => filter.ingredients.has(item.name)),\n          )\n          .flatMap((meal) => meal.ingredients)\n          .filter((item) => item.name === ingredient.name)\n          .map((item) => item.count);\n\n        if (countList.length > 0) {\n          const list = [-1, ...new Set(countList)].sort((a, b) => a - b);\n          return [\n            ingredient.name,\n            {\n              count: list[list.length - 1],\n              list,\n            },\n          ];\n        }\n        return [\n          ingredient.name,\n          {\n            count: -1,\n            list: [],\n          },\n        ];\n      }),\n  );\n};\n\nexport function SelectIngredientCount({ filter, handleCountChange }: Props) {\n  if (filter.ingredients.size <= 0) {\n    return <></>;\n  }\n\n  const countList = getCountList(filter);\n\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材數量 (選至少滿足多少個)' />\n      <div className='grid grid-cols-1 gap-y-2 md:grid-cols-2'>\n        {Object.entries(countList)\n          .sort((a, b) => b[1].list.length - a[1].list.length)\n          .map(([key, val]) => {\n            return (\n              <div key={key} className='flex items-center gap-3'>\n                <div className='flex w-16 flex-col items-center'>\n                  <div className='h-12 w-12'>\n                    <Icon.Game.Ingredient name={key} />\n                  </div>\n                  <span\n                    className={clsx(\n                      '-mt-3 whitespace-nowrap',\n                      'rounded-full border-2 border-amber-300',\n                      'bg-white px-1 text-center text-xs font-medium',\n                    )}\n                  >\n                    {ingredientMap[key]}能量\n                  </span>\n                </div>\n                {val.list.length === 0 && '未用到 / 尚缺其他食材 / 鍋子容量不夠'}\n                {val.list.length > 0 &&\n                  val.list.map((count, i) => (\n                    <SelectCount\n                      name={key}\n                      key={count}\n                      n={count}\n                      min={val.list[1]}\n                      selected={\n                        filter.ingredientsCount[key] === undefined\n                          ? i === val.list.length - 1\n                          : filter.ingredientsCount[key] === count\n                      }\n                      handleCountChange={handleCountChange}\n                    />\n                  ))}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport { Filter } from '../Meal';\nimport { SelectType } from './SelectType';\nimport { SelectSize } from './SelectSize';\nimport { SelectIngredient } from './SelectIngredient';\nimport { SelectIngredientCount } from './SelectIngredientCount';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function ToolBar({\n  filter,\n  handleInputChange,\n  handleSizeChange,\n  handleChickChange,\n  handleCountChange,\n}: Props) {\n  return (\n    <>\n      {/* type */}\n      <SelectType filter={filter} handleInputChange={handleInputChange} />\n      {/* size */}\n      <SelectSize filter={filter} handleSizeChange={handleSizeChange} />\n      {/* ingredients */}\n      <SelectIngredient filter={filter} handleChickChange={handleChickChange} />\n      {/* ingredient count */}\n      <SelectIngredientCount filter={filter} handleCountChange={handleCountChange} />\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Filter, Meal } from '../Meal';\nimport { Icon } from '@/components';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function CardBody({ meal, filter }: Props) {\n  return (\n    <div className='flex flex-col justify-between gap-y-1 p-2 pb-4'>\n      <h4 className='font-bold'>{meal.name}</h4>\n      <div className='flex items-center gap-x-2'>\n        <ul className='flex w-full items-center gap-6'>\n          {meal.ingredients.length > 0 ? (\n            meal.ingredients.map(({ name, count }) => (\n              <li className='relative flex items-center' key={name}>\n                <div\n                  className={clsx(\n                    'h-10 w-10 rounded-full p-1',\n                    'transition-all duration-300',\n                    filter.ingredients.has(name) &&\n                      (filter.ingredientsCount[name] === undefined\n                        ? true\n                        : filter.ingredientsCount[name] >= count)\n                      ? 'bg-amber-300'\n                      : 'bg-amber-100',\n                  )}\n                >\n                  <Icon.Game.Ingredient name={name} />\n                </div>\n                <span\n                  className={clsx(\n                    'absolute -bottom-1 -right-4 rounded-full',\n                    'border-2 border-amber-300 bg-white px-1 text-xs font-medium',\n                  )}\n                >\n                  ×{count}\n                </span>\n              </li>\n            ))\n          ) : (\n            <li className='relative flex items-center'>\n              <div className='h-10 w-10 rounded-full bg-amber-100 p-1'></div>\n              <span className='absolute -right-1 bottom-0 text-xs font-medium'>&gt;0</span>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon } from '@/components';\nimport { Filter, Meal } from '../Meal';\nimport { CardBody } from './CardBody';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function Card({ meal, filter }: Props) {\n  const match =\n    meal.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name)) &&\n    meal.ingredients.reduce((acc, curr) => acc + curr.count, 0) <= filter.size &&\n    meal.ingredients.every((ingredient) =>\n      filter.ingredientsCount[ingredient.name] === undefined\n        ? true\n        : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n    );\n\n  return (\n    <li\n      key={meal.name}\n      className={clsx(\n        'relative flex border-[1px]',\n        'items-center gap-0 overflow-hidden rounded-[12px]',\n        match ? 'border-custom-green' : 'border-amber-300',\n        'shadow-list-items',\n      )}\n    >\n      <div\n        className={clsx(\n          'relative flex h-full w-24 flex-col justify-center',\n          'transition-all duration-300',\n          match ? 'bg-custom-green/60' : 'bg-amber-100',\n        )}\n      >\n        <Icon.Game.Meal name={meal.name} />\n        <span className='absolute bottom-0 right-2 font-bold'>\n          {meal.ingredients.reduce((acc, { count }) => acc + count, 0)}\n        </span>\n      </div>\n      <CardBody filter={filter} meal={meal} />\n    </li>\n  );\n}\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { meals } from '@/data';\nimport { TitleSlide } from '@/components';\nimport { useWeek } from '@/components/contexts';\n\nimport { Card, ToolBar } from './components';\n\nexport type Filter = {\n  type: string;\n  size: number;\n  ingredients: Set<string>;\n  ingredientsCount: Record<string, number>;\n};\n\nexport type Meal = {\n  name: string;\n  type: string;\n  ingredients: {\n    name: string;\n    count: number;\n  }[];\n};\n\nfunction Meal() {\n  const { week, toggleMealType, toggleMealSize } = useWeek();\n\n  const [filter, setFilter] = useState<Filter>({\n    type: week.meal.type,\n    size: week.meal.size,\n    ingredients: new Set<string>(),\n    ingredientsCount: {},\n  });\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    toggleMealType(name);\n  };\n\n  const handleSizeChange = (n: number) => {\n    toggleMealSize(Math.min(Math.max(15, filter.size + n), 162));\n  };\n\n  const handleChickChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n\n    setFilter((prevSearch) => {\n      if (checked) {\n        prevSearch.ingredients.add(name);\n      } else {\n        prevSearch.ingredients.delete(name);\n        delete prevSearch.ingredientsCount[name];\n      }\n\n      return {\n        ...prevSearch,\n        ingredients: prevSearch.ingredients,\n        ingredientsCount: prevSearch.ingredientsCount,\n      };\n    });\n  };\n\n  const handleCountChange = (name: string, count: number) => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      ingredientsCount: Object.assign(prevSearch.ingredientsCount, { [name]: count }),\n    }));\n  };\n\n  const sortFn = (a: Meal, b: Meal) => {\n    if (filter.ingredients.size > 0) {\n      let aHas = a.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      let bHas = b.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n      bHas = b.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n      bHas = b.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n    }\n\n    const aCount = a.ingredients.reduce((acc, { count }) => acc + count, 0);\n    const bCount = b.ingredients.reduce((acc, { count }) => acc + count, 0);\n\n    if (aCount !== bCount) {\n      return aCount - bCount;\n    }\n\n    return a.ingredients.length - b.ingredients.length;\n  };\n\n  useEffect(() => {\n    document.title = `Sleep Meals`;\n  }, []);\n\n  useEffect(() => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      type: week.meal.type,\n      size: week.meal.size,\n    }));\n  }, [week.meal]);\n\n  return (\n    <div className='flex flex-col gap-4 pt-4'>\n      <ToolBar\n        filter={filter}\n        handleInputChange={handleInputChange}\n        handleSizeChange={handleSizeChange}\n        handleChickChange={handleChickChange}\n        handleCountChange={handleCountChange}\n      />\n      {/* list */}\n      <div className='flex flex-col gap-y-4'>\n        <TitleSlide title='清單' />\n        <ul className={clsx('gap-4', 'grid grid-cols-1', 'md:grid-cols-2')}>\n          {meals\n            .filter((meal) => {\n              if (meal.ingredients.length === 0 && filter.ingredients.size > 0) {\n                return false;\n              }\n              return meal.type === filter.type;\n            })\n            .sort(sortFn)\n            .map((meal) => (\n              <Card key={meal.name} filter={filter} meal={meal} />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Meal;\n"],"names":["Card","_ref","pm","_jsxs","className","children","pid","slice","_jsx","clsx","TypeBgClass","Type","type","Icon","name","sleep_type","specialty","Array","berry_quantity","fill","map","_","index","berry","ingredients","length","ingredient","SearchBar","value","onChange","_Fragment","placeholder","Buttons","list","checkSet","handleChange","prefixKey","item","CheckboxItem","label","checked","has","size","TextButtons","_ref2","select","CheckboxTextItem","key","Filter","id","htmlFor","Category","Indicator","SelectFilter","filter","handleChickChange","handleFirstChange","handleCheckChange","Toggle","text","isUseSnorlaxLocations","isUseSnorlaxBerries","displayFilter","SubTitleSlide","title","berries","onlyFirstIngredient","specialties","skills","areas","locations","SelectGroup","handleGroupByChange","groupBySelect","displayGroupBy","groupBy","PlusMinus","n","handleSizeChange","displayNum","concat","onClick","SelectCount","_ref3","min","selected","handleCountChange","SelectType","handleInputChange","SelectSize","SelectIngredient","ingredientMap","Object","fromEntries","point","getCountList","countList","meals","meal","reduce","sum","count","every","flatMap","_toConsumableArray","Set","sort","a","b","SelectIngredientCount","entries","_slicedToArray","val","i","undefined","ingredientsCount","ToolBar","CardBody","match","acc","curr","_useWeek","useWeek","week","toggleMealType","toggleMealSize","_useState","useState","_useState2","setFilter","useEffect","document","prevSearch","_objectSpread","event","target","Math","max","_event$target","add","delete","assign","_defineProperty","TitleSlide","aHas","some","bHas","aCount","bCount"],"sourceRoot":""}