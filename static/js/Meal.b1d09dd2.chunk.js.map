{"version":3,"file":"static/js/Meal.b1d09dd2.chunk.js","mappings":"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","sources":["pages/List/components/Card.tsx","pages/List/components/SearchBar.tsx","pages/List/components/Buttons.tsx","pages/List/components/Filter.tsx","pages/List/components/Category.tsx","pages/List/components/Indicator.tsx","pages/List/components/SelectFilter.tsx","pages/List/components/SelectGroup.tsx","pages/Meal/components/Buttons.tsx","pages/Meal/components/SelectType.tsx","pages/Meal/components/SelectSize.tsx","pages/Meal/components/SelectIngredient.tsx","pages/Meal/components/SelectIngredientCount.tsx","pages/Meal/components/ToolBar.tsx","pages/Meal/components/CardBody.tsx","pages/Meal/components/Card.tsx","pages/Meal/Meal.tsx"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Pokemon, Type, TypeBgClass } from '@/types';\nimport { Icon } from '@/components';\n\nexport function Card({ pm }: { pm: Pokemon }) {\n  return (\n    <div className='flex w-full flex-col items-center gap-1 p-2'>\n      <p className='font-bold'>No. {pm.pid.slice(-3)}</p>\n      <div\n        className={clsx(\n          'relative h-16 w-16 overflow-hidden rounded-full',\n          'outline outline-2 outline-white',\n          TypeBgClass[Type[pm.type as keyof typeof Type] as keyof typeof TypeBgClass],\n        )}\n      >\n        <Icon.Game.Pm pm={pm} />\n      </div>\n      <p className='text-base'>{pm.name}</p>\n      <p className='flex items-center text-xs'>\n        {pm.sleep_type} - {pm.specialty}\n      </p>\n      <p className='flex'>\n        {new Array(pm.berry_quantity).fill(0).map((_, index) => (\n          <span className='relative h-8 w-8' key={index}>\n            <Icon.Game.Berry name={pm.berry} />\n          </span>\n        ))}\n      </p>\n      {pm.ingredients.length > 0 && (\n        <p className='flex'>\n          {pm.ingredients.map((ingredient) => (\n            <span className='relative h-8 w-8' key={ingredient}>\n              <Icon.Game.Ingredient name={ingredient} />\n            </span>\n          ))}\n        </p>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n};\n\nexport function SearchBar({ value, onChange }: Props) {\n  return (\n    <>\n      <div className='relative w-full'>\n        <div className='pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3'>\n          <Icon.Search className='h-5 w-5' />\n        </div>\n        <input\n          type='search'\n          className={clsx(\n            'block w-full rounded-lg border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900',\n          )}\n          placeholder='搜尋名稱'\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxItem, CheckboxTextItem } from '@/components';\n\ntype Props = {\n  checkSet: Set<string>;\n  list: string[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  Icon?: ({ name }: { name: string }) => JSX.Element;\n};\n\ntype TextProps = {\n  select: string | null;\n  list: { key: string; name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Buttons({ list, checkSet, Icon, handleChange }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxItem key={item} label={item} checked={checkSet.has(item)} onChange={handleChange}>\n          {Icon && <Icon name={item} />}\n        </CheckboxItem>\n      ))}\n    </div>\n  );\n}\n\nexport function TextButtons({ list, select, handleChange }: TextProps) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.key}\n          label={item}\n          checked={(select === null && item.key === 'none') || select === item.key}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Filter({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'filter'}\n        id={'filter'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'filter'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Filter className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Category({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'category'}\n        id={'category'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'category'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Category className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","export function Indicator() {\n  return <span className='absolute -top-1 left-4 h-3 w-3 rounded-full bg-custom-green'></span>;\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { Icon, SubTitleSlide } from '@/components';\n\nimport { berries, ingredients, skills, specialties } from '@/data';\n\nimport { Buttons } from './Buttons';\nimport { Filter } from '../List';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (\n    key: 'berries' | 'ingredients' | 'skills' | 'specialties',\n  ) => (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectFilter({ filter, handleChickChange }: Props) {\n  return (\n    <div\n      className={clsx(\n        'origin-top space-y-4 overflow-hidden transition-all duration-300',\n        filter.displayFilter ? 'mb-4 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n      )}\n    >\n      <SubTitleSlide title='篩選：樹果' />\n      <Buttons\n        list={berries.map((berry) => berry.name)}\n        Icon={Icon.Game.Berry}\n        checkSet={filter.berries}\n        handleChange={handleChickChange('berries')}\n      />\n      <SubTitleSlide title='篩選：食材' />\n      <Buttons\n        list={ingredients.map((ingredient) => ingredient.name)}\n        Icon={Icon.Game.Ingredient}\n        checkSet={filter.ingredients}\n        handleChange={handleChickChange('ingredients')}\n      />\n      <SubTitleSlide title='篩選：專長' />\n      <Buttons\n        list={specialties}\n        checkSet={filter.specialties}\n        handleChange={handleChickChange('specialties')}\n      />\n      <SubTitleSlide title='篩選：主技能' />\n      <Buttons list={skills} checkSet={filter.skills} handleChange={handleChickChange('skills')} />\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { SubTitleSlide } from '@/components';\nimport { Filter } from '../List';\nimport { TextButtons } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleGroupByChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectGroup({ filter, handleGroupByChange }: Props) {\n  const groupBySelect = [\n    { key: 'none', name: '無' },\n    { key: 'sleep_type', name: '睡眠分類' },\n    { key: 'berry', name: '樹果' },\n    { key: 'ingredients', name: '食材' },\n    { key: 'specialty', name: '專長' },\n    { key: 'skill', name: '主技能' },\n    { key: 'type', name: '屬性' },\n  ];\n\n  return (\n    <div\n      className={clsx(\n        'origin-top space-y-4 overflow-hidden transition-all duration-300',\n        filter.displayGroupBy ? 'mb-2 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n      )}\n    >\n      <SubTitleSlide title='分組方式' />\n      <TextButtons\n        list={groupBySelect}\n        select={filter.groupBy}\n        handleChange={handleGroupByChange}\n      />\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxTextItem } from '@/components';\n\ntype Props = {\n  select: string | null;\n  list: { name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function TextButtons({ list, select, handleChange }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.name}\n          label={{ key: item.name, name: item.name }}\n          checked={select === item.name}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n\ntype PlusMinusProps = {\n  n: number;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function PlusMinus({ n, handleSizeChange }: PlusMinusProps) {\n  return (\n    <button\n      type='button'\n      className='h-8 w-8 rounded-full bg-amber-100 shadow-list-items'\n      onClick={() => handleSizeChange(n)}\n    >\n      {n > 0 && '+'}\n      {n}\n    </button>\n  );\n}\n\ntype SelectCountProps = {\n  name: string;\n  n: number;\n  min: number;\n  selected: boolean;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function SelectCount({ name, n, min, selected, handleCountChange }: SelectCountProps) {\n  return (\n    <button\n      type='button'\n      className={clsx(\n        'h-8 w-8 rounded-full',\n        'shadow-list-items',\n        selected ? 'bg-amber-300' : 'bg-amber-100',\n      )}\n      onClick={() => handleCountChange(name, n)}\n    >\n      {n > 0 ? `${n}` : `<${min}`}\n    </button>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { SubTitleSlide } from '@/components';\nimport { TextButtons } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectType({ filter, handleInputChange }: Props) {\n  const types = [{ name: '咖哩' }, { name: '沙拉' }, { name: '飲料、點心' }];\n\n  return (\n    <div className={'h-full space-y-4'}>\n      <SubTitleSlide title='料理種類' />\n      <TextButtons list={types} select={filter.type} handleChange={handleInputChange} />\n    </div>\n  );\n}\n","import { SubTitleSlide } from '@/components';\nimport { PlusMinus } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function SelectSize({ filter, handleSizeChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='鍋子容量' />\n      <div className='flex items-center gap-3 pl-2 text-center font-bold'>\n        <PlusMinus n={-3} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={-1} handleSizeChange={handleSizeChange} />\n        <p className='flex h-12 w-12 flex-col justify-center rounded-full bg-amber-300 shadow-list-items'>\n          <span>{filter.size}</span>\n        </p>\n        <PlusMinus n={1} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={3} handleSizeChange={handleSizeChange} />\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Buttons } from '@/pages/List/components';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients } from '@/data';\n\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectIngredient({ filter, handleChickChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材' />\n      <Buttons\n        list={ingredients.map((ingredient) => ingredient.name)}\n        Icon={Icon.Game.Ingredient}\n        checkSet={filter.ingredients}\n        handleChange={handleChickChange}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients, meals } from '@/data';\n\nimport { Filter } from '../Meal';\nimport { SelectCount } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleCountChange: (name: string, count: number) => void;\n};\n\ntype IngredientsCount = {\n  count: number; // -1 is not enough\n  list: number[];\n};\n\nconst ingredientMap = Object.fromEntries(\n  ingredients.map((ingredient) => [ingredient.name, ingredient.point]),\n);\n\nconst getCountList = (filter: Filter): Record<string, IngredientsCount> => {\n  return Object.fromEntries(\n    ingredients\n      .filter((ingredient) => filter.ingredients.has(ingredient.name))\n      .map((ingredient) => {\n        const countList = meals\n          .filter(\n            (meal) =>\n              meal.type === filter.type &&\n              meal.ingredients.reduce((sum, item) => sum + item.count, 0) <= filter.size &&\n              meal.ingredients.every((item) => filter.ingredients.has(item.name)),\n          )\n          .flatMap((meal) => meal.ingredients)\n          .filter((item) => item.name === ingredient.name)\n          .map((item) => item.count);\n\n        if (countList.length > 0) {\n          const list = [-1, ...new Set(countList)].sort((a, b) => a - b);\n          return [\n            ingredient.name,\n            {\n              count: list[list.length - 1],\n              list,\n            },\n          ];\n        }\n        return [\n          ingredient.name,\n          {\n            count: -1,\n            list: [],\n          },\n        ];\n      }),\n  );\n};\n\nexport function SelectIngredientCount({ filter, handleCountChange }: Props) {\n  if (filter.ingredients.size <= 0) {\n    return <></>;\n  }\n\n  const countList = getCountList(filter);\n\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材數量 (選至少滿足多少個)' />\n      <div className='grid grid-cols-1 gap-y-2 md:grid-cols-2'>\n        {Object.entries(countList)\n          .sort((a, b) => b[1].list.length - a[1].list.length)\n          .map(([key, val]) => {\n            return (\n              <div key={key} className='flex items-center gap-3'>\n                <div className='flex w-16 flex-col items-center'>\n                  <div className='h-12 w-12'>\n                    <Icon.Game.Ingredient name={key} />\n                  </div>\n                  <span\n                    className={clsx(\n                      '-mt-3 whitespace-nowrap',\n                      'rounded-full border-2 border-amber-300',\n                      'bg-white px-1 text-center text-xs font-medium',\n                    )}\n                  >\n                    {ingredientMap[key]}能量\n                  </span>\n                </div>\n                {val.list.length === 0 && '未用到 / 尚缺其他食材 / 鍋子容量不夠'}\n                {val.list.length > 0 &&\n                  val.list.map((count, i) => (\n                    <SelectCount\n                      name={key}\n                      key={count}\n                      n={count}\n                      min={val.list[1]}\n                      selected={\n                        filter.ingredientsCount[key] === undefined\n                          ? i === val.list.length - 1\n                          : filter.ingredientsCount[key] === count\n                      }\n                      handleCountChange={handleCountChange}\n                    />\n                  ))}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport { Filter } from '../Meal';\nimport { SelectType } from './SelectType';\nimport { SelectSize } from './SelectSize';\nimport { SelectIngredient } from './SelectIngredient';\nimport { SelectIngredientCount } from './SelectIngredientCount';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function ToolBar({\n  filter,\n  handleInputChange,\n  handleSizeChange,\n  handleChickChange,\n  handleCountChange,\n}: Props) {\n  return (\n    <>\n      {/* type */}\n      <SelectType filter={filter} handleInputChange={handleInputChange} />\n      {/* size */}\n      <SelectSize filter={filter} handleSizeChange={handleSizeChange} />\n      {/* ingredients */}\n      <SelectIngredient filter={filter} handleChickChange={handleChickChange} />\n      {/* ingredient count */}\n      <SelectIngredientCount filter={filter} handleCountChange={handleCountChange} />\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Filter, Meal } from '../Meal';\nimport { Icon } from '@/components';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function CardBody({ meal, filter }: Props) {\n  return (\n    <div className='flex flex-col justify-between gap-y-1 p-2 pb-4'>\n      <h4 className='font-bold'>{meal.name}</h4>\n      <div className='flex items-center gap-x-2'>\n        <ul className='flex w-full items-center gap-6'>\n          {meal.ingredients.length > 0 ? (\n            meal.ingredients.map(({ name, count }) => (\n              <li className='relative flex items-center' key={name}>\n                <div\n                  className={clsx(\n                    'h-10 w-10 rounded-full p-1',\n                    'transition-all duration-300',\n                    filter.ingredients.has(name) &&\n                      (filter.ingredientsCount[name] === undefined\n                        ? true\n                        : filter.ingredientsCount[name] >= count)\n                      ? 'bg-amber-300'\n                      : 'bg-amber-100',\n                  )}\n                >\n                  <Icon.Game.Ingredient name={name} />\n                </div>\n                <span\n                  className={clsx(\n                    'absolute -bottom-1 -right-4 rounded-full',\n                    'border-2 border-amber-300 bg-white px-1 text-xs font-medium',\n                  )}\n                >\n                  ×{count}\n                </span>\n              </li>\n            ))\n          ) : (\n            <li className='relative flex items-center'>\n              <div className='h-10 w-10 rounded-full bg-amber-100 p-1'></div>\n              <span className='absolute -right-1 bottom-0 text-xs font-medium'>&gt;0</span>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon } from '@/components';\nimport { Filter, Meal } from '../Meal';\nimport { CardBody } from './CardBody';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function Card({ meal, filter }: Props) {\n  const match =\n    meal.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name)) &&\n    meal.ingredients.reduce((acc, curr) => acc + curr.count, 0) <= filter.size &&\n    meal.ingredients.every((ingredient) =>\n      filter.ingredientsCount[ingredient.name] === undefined\n        ? true\n        : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n    );\n\n  return (\n    <li\n      key={meal.name}\n      className={clsx(\n        'relative flex border-[1px]',\n        'items-center gap-0 overflow-hidden rounded-[12px]',\n        match ? 'border-custom-green' : 'border-amber-300',\n        'shadow-list-items',\n      )}\n    >\n      <div\n        className={clsx(\n          'relative flex h-full w-24 flex-col justify-center',\n          'transition-all duration-300',\n          match ? 'bg-custom-green/60' : 'bg-amber-100',\n        )}\n      >\n        <Icon.Game.Meal name={meal.name} />\n        <span className='absolute bottom-0 right-2 font-bold'>\n          {meal.ingredients.reduce((acc, { count }) => acc + count, 0)}\n        </span>\n      </div>\n      <CardBody filter={filter} meal={meal} />\n    </li>\n  );\n}\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { meals } from '@/data';\nimport { TitleSlide } from '@/components';\n\nimport { Card, ToolBar } from './components';\n\nexport type Filter = {\n  type: string;\n  size: number;\n  ingredients: Set<string>;\n  ingredientsCount: Record<string, number>;\n};\n\nexport type Meal = {\n  name: string;\n  type: string;\n  ingredients: {\n    name: string;\n    count: number;\n  }[];\n};\n\nfunction Meal() {\n  const [filter, setFilter] = useState<Filter>({\n    type: '咖哩',\n    size: 15,\n    ingredients: new Set<string>(),\n    ingredientsCount: {},\n  });\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      type: name,\n    }));\n  };\n\n  const handleSizeChange = (n: number) => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      size: Math.max(15, prevSearch.size + n),\n    }));\n  };\n\n  const handleChickChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n\n    setFilter((prevSearch) => {\n      if (checked) {\n        prevSearch.ingredients.add(name);\n      } else {\n        prevSearch.ingredients.delete(name);\n        delete prevSearch.ingredientsCount[name];\n      }\n\n      return {\n        ...prevSearch,\n        ingredients: prevSearch.ingredients,\n        ingredientsCount: prevSearch.ingredientsCount,\n      };\n    });\n  };\n\n  const handleCountChange = (name: string, count: number) => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      ingredientsCount: Object.assign(prevSearch.ingredientsCount, { [name]: count }),\n    }));\n  };\n\n  const sortFn = (a: Meal, b: Meal) => {\n    if (filter.ingredients.size > 0) {\n      let aHas = a.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      let bHas = b.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n      bHas = b.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n      bHas = b.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n    }\n\n    const aCount = a.ingredients.reduce((acc, { count }) => acc + count, 0);\n    const bCount = b.ingredients.reduce((acc, { count }) => acc + count, 0);\n\n    if (aCount !== bCount) {\n      return aCount - bCount;\n    }\n\n    return a.ingredients.length - b.ingredients.length;\n  };\n\n  useEffect(() => {\n    document.title = `Sleep Meals`;\n  }, []);\n\n  return (\n    <div className='flex flex-col gap-4 pt-4'>\n      <ToolBar\n        filter={filter}\n        handleInputChange={handleInputChange}\n        handleSizeChange={handleSizeChange}\n        handleChickChange={handleChickChange}\n        handleCountChange={handleCountChange}\n      />\n      {/* list */}\n      <div className='flex flex-col gap-y-4'>\n        <TitleSlide title='清單' />\n        <ul className={clsx('gap-4', 'grid grid-cols-1', 'md:grid-cols-2')}>\n          {meals\n            .filter((meal) => {\n              if (meal.ingredients.length === 0 && filter.ingredients.size > 0) {\n                return false;\n              }\n              return meal.type === filter.type;\n            })\n            .sort(sortFn)\n            .map((meal) => (\n              <Card key={meal.name} filter={filter} meal={meal} />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Meal;\n"],"names":["Card","_ref","pm","_jsxs","className","children","pid","slice","_jsx","clsx","TypeBgClass","Type","type","Icon","name","sleep_type","specialty","Array","berry_quantity","fill","map","_","index","berry","ingredients","length","ingredient","SearchBar","value","onChange","_Fragment","placeholder","Buttons","list","checkSet","handleChange","item","CheckboxItem","label","checked","has","TextButtons","_ref2","select","CheckboxTextItem","key","Filter","id","htmlFor","Category","Indicator","SelectFilter","filter","handleChickChange","displayFilter","SubTitleSlide","title","berries","specialties","skills","SelectGroup","handleGroupByChange","displayGroupBy","groupBy","PlusMinus","n","handleSizeChange","onClick","SelectCount","_ref3","min","selected","handleCountChange","concat","SelectType","handleInputChange","SelectSize","size","SelectIngredient","ingredientMap","Object","fromEntries","point","getCountList","countList","meals","meal","reduce","sum","count","every","flatMap","_toConsumableArray","Set","sort","a","b","SelectIngredientCount","entries","_slicedToArray","val","i","undefined","ingredientsCount","ToolBar","CardBody","match","acc","curr","_useState","useState","_useState2","setFilter","useEffect","document","event","target","prevSearch","_objectSpread","Math","max","_event$target","add","delete","assign","_defineProperty","TitleSlide","aHas","some","bHas","aCount","bCount"],"sourceRoot":""}