{"version":3,"file":"static/js/Meal.ca070907.chunk.js","mappings":"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","sources":["pages/List/components/Card.tsx","pages/List/components/SearchBar.tsx","pages/List/components/Buttons.tsx","pages/List/components/Filter.tsx","pages/List/components/Category.tsx","pages/List/components/Indicator.tsx","pages/List/components/SelectFilter.tsx","pages/List/components/SelectGroup.tsx","pages/Meal/components/Buttons.tsx","pages/Meal/components/SelectType.tsx","pages/Meal/components/SelectSize.tsx","pages/Meal/components/SelectIngredient.tsx","pages/Meal/components/SelectIngredientCount.tsx","pages/Meal/components/ToolBar.tsx","pages/Meal/components/CardBody.tsx","pages/Meal/components/Card.tsx","pages/Meal/Meal.tsx"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Pokemon, Type, TypeBgClass } from '@/types';\nimport { Icon } from '@/components';\nimport { Filter } from '../List';\n\nexport function Card({ pm, filter, groupBy }: { pm: Pokemon; filter: Filter; groupBy: string }) {\n  const displayLevel = filter.groupBy === 'level';\n  let sleepType = null;\n  if (filter.groupBy === 'level') {\n    sleepType = pm.locations[\n      Object.keys(pm.locations).find((location) =>\n        filter.locations.has(location),\n      ) as keyof typeof pm.locations\n    ]?.find((sleepStyle) => `${sleepStyle.level}${sleepStyle.subLevel}` === groupBy);\n  }\n\n  return (\n    <div className='flex w-full flex-col items-center gap-1 p-2'>\n      <p className='font-bold'>No. {pm.pid.slice(-3)}</p>\n      <div\n        className={clsx(\n          'relative h-16 w-16 overflow-hidden rounded-full',\n          'outline outline-2 outline-white',\n          TypeBgClass[Type[pm.type as keyof typeof Type] as keyof typeof TypeBgClass],\n        )}\n      >\n        <Icon.Game.Pm pm={pm} />\n      </div>\n      <p className='text-base'>{pm.name}</p>\n      <p className='flex items-center text-xs'>\n        {pm.sleep_type} - {pm.specialty}\n      </p>\n      {displayLevel === false && (\n        <>\n          <p className='flex'>\n            {new Array(pm.berry_quantity).fill(0).map((_, index) => (\n              <span className='relative h-8 w-8' key={index}>\n                <Icon.Game.Berry name={pm.berry} />\n              </span>\n            ))}\n          </p>\n          {pm.ingredients.length > 0 && (\n            <p className='flex'>\n              {pm.ingredients.map((ingredient) => (\n                <span className='relative h-8 w-8' key={ingredient}>\n                  <Icon.Game.Ingredient name={ingredient} />\n                </span>\n              ))}\n            </p>\n          )}\n        </>\n      )}\n\n      {displayLevel === true && (\n        <p className='flex items-center text-xs'>\n          #{`${(sleepType?.style || 0) + 1} `}\n          {pm.sleep[sleepType?.style as number] || '大肚上睡'}\n        </p>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n};\n\nexport function SearchBar({ value, onChange }: Props) {\n  return (\n    <>\n      <div className='relative w-full'>\n        <div className='pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3'>\n          <Icon.Search className='h-5 w-5' />\n        </div>\n        <input\n          type='search'\n          className={clsx(\n            'block w-full rounded-lg border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900',\n          )}\n          placeholder='搜尋名稱'\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxItem, CheckboxTextItem } from '@/components';\n\ntype Props = {\n  checkSet: Set<string>;\n  list: string[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  Icon?: ({ name, size = 'h-8 w-8' }: { name: string; size?: string }) => JSX.Element;\n  prefixKey?: string;\n};\n\nexport function Buttons({ list, checkSet, Icon, handleChange, prefixKey }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxItem\n          key={item}\n          label={item}\n          checked={checkSet.has(item)}\n          onChange={handleChange}\n          prefixKey={prefixKey}\n        >\n          {Icon && <Icon name={item} size={'h-10 w-10'} />}\n        </CheckboxItem>\n      ))}\n    </div>\n  );\n}\n\ntype TextProps = {\n  select: string | null;\n  list: { key: string; name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function TextButtons({ list, select, handleChange }: TextProps) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pb-2 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.key}\n          label={item}\n          checked={(select === null && item.key === 'none') || select === item.key}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Filter({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'filter'}\n        id={'filter'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'filter'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Filter className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/components';\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function Category({ checked, onChange }: Props) {\n  return (\n    <>\n      <input\n        type='checkbox'\n        name={'category'}\n        id={'category'}\n        className='hidden'\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={'category'} className='flex cursor-pointer flex-col items-center'>\n        <Icon.Category className='h-6 w-6' />\n      </label>\n    </>\n  );\n}\n","export function Indicator() {\n  return <span className='absolute -top-1 left-4 h-3 w-3 rounded-full bg-custom-green'></span>;\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { Icon, SubTitleSlide, Toggle } from '@/components';\n\nimport { berries, ingredients, skills, specialties, areas } from '@/data';\n\nimport { Buttons } from './Buttons';\nimport { Filter, checkKeys, groupByKeys } from '../List';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (key: groupByKeys) => (event: ChangeEvent<HTMLInputElement>) => void;\n  handleFirstChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleCheckChange: (key: checkKeys) => (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectFilter({\n  filter,\n  handleChickChange,\n  handleFirstChange,\n  handleCheckChange,\n}: Props) {\n  return (\n    <>\n      <div className='flex gap-x-4'>\n        <Toggle\n          text='使用卡比獸的區域'\n          checked={filter.isUseSnorlaxLocations}\n          handleChange={handleCheckChange('isUseSnorlaxLocations')}\n        />\n        <Toggle\n          text='使用卡比獸的樹果'\n          checked={filter.isUseSnorlaxBerries}\n          handleChange={handleCheckChange('isUseSnorlaxBerries')}\n        />\n      </div>\n      <div\n        className={clsx(\n          'origin-top space-y-4 overflow-hidden transition-all duration-300',\n          filter.displayFilter ? 'mb-4 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n        )}\n      >\n        <SubTitleSlide title='篩選：樹果' />\n\n        <Buttons\n          list={berries.map((berry) => berry.name)}\n          Icon={Icon.Game.Berry}\n          checkSet={filter.berries}\n          handleChange={handleChickChange('berries')}\n        />\n\n        <SubTitleSlide title='篩選：食材' />\n        <Toggle\n          text='只挑選第一食材'\n          checked={filter.onlyFirstIngredient}\n          handleChange={handleFirstChange}\n        />\n        <Buttons\n          list={ingredients.map((ingredient) => ingredient.name)}\n          Icon={Icon.Game.Ingredient}\n          checkSet={filter.ingredients}\n          handleChange={handleChickChange('ingredients')}\n        />\n\n        <SubTitleSlide title='篩選：專長' />\n        <Buttons\n          list={specialties}\n          checkSet={filter.specialties}\n          handleChange={handleChickChange('specialties')}\n        />\n\n        <SubTitleSlide title='篩選：主技能' />\n        <Buttons\n          list={skills}\n          checkSet={filter.skills}\n          handleChange={handleChickChange('skills')}\n        />\n\n        <SubTitleSlide title='篩選：區域' />\n        <Buttons\n          list={areas.map((area) => area.name)}\n          checkSet={filter.locations}\n          handleChange={handleChickChange('locations')}\n        />\n      </div>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { SubTitleSlide } from '@/components';\nimport { Filter } from '../List';\nimport { TextButtons } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleGroupByChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectGroup({ filter, handleGroupByChange }: Props) {\n  const groupBySelect = [\n    { key: 'none', name: '無' },\n    { key: 'sleep_type', name: '睡眠分類' },\n    { key: 'berry', name: '樹果' },\n    { key: 'ingredients', name: '食材' + (filter.onlyFirstIngredient ? '(第一食材)' : '') },\n    { key: 'specialty', name: '專長' },\n    { key: 'skill', name: '主技能' },\n    { key: 'type', name: '屬性' },\n    { key: 'level', name: '卡比獸等級' },\n  ];\n\n  return (\n    <div\n      className={clsx(\n        'origin-top space-y-4 overflow-hidden transition-all duration-300',\n        filter.displayGroupBy ? 'mb-2 h-full scale-y-100 opacity-100' : 'h-0 scale-y-0 opacity-0',\n      )}\n    >\n      <SubTitleSlide title='分組方式' />\n      <TextButtons\n        list={groupBySelect}\n        select={filter.groupBy}\n        handleChange={handleGroupByChange}\n      />\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport clsx from 'clsx';\n\nimport { CheckboxTextItem } from '@/components';\n\ntype Props = {\n  select: string | null;\n  list: { name: string }[];\n  handleChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function TextButtons({ list, select, handleChange }: Props) {\n  return (\n    <div className={clsx('flex w-full flex-wrap gap-4 pl-2')}>\n      {list.map((item) => (\n        <CheckboxTextItem\n          key={item.name}\n          label={{ key: item.name, name: item.name }}\n          checked={select === item.name}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n}\n\ntype PlusMinusProps = {\n  n: number;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function PlusMinus({ n, handleSizeChange }: PlusMinusProps) {\n  const displayNum = n > 3 ? 'x2' : n > 0 ? `+${n}` : n;\n  return (\n    <button\n      type='button'\n      className='h-8 w-8 rounded-full bg-amber-100 shadow-list-items'\n      onClick={() => handleSizeChange(n)}\n    >\n      {displayNum}\n    </button>\n  );\n}\n\ntype SelectCountProps = {\n  name: string;\n  n: number;\n  min: number;\n  selected: boolean;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function SelectCount({ name, n, min, selected, handleCountChange }: SelectCountProps) {\n  return (\n    <button\n      type='button'\n      className={clsx(\n        'h-8 w-8 rounded-full',\n        'shadow-list-items',\n        selected ? 'bg-amber-300' : 'bg-amber-100',\n      )}\n      onClick={() => handleCountChange(name, n)}\n    >\n      {n > 0 ? `${n}` : `<${min}`}\n    </button>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { SubTitleSlide } from '@/components';\nimport { TextButtons } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectType({ filter, handleInputChange }: Props) {\n  const types = [{ name: '咖哩' }, { name: '沙拉' }, { name: '飲料、點心' }];\n\n  return (\n    <div className={'h-full space-y-4'}>\n      <SubTitleSlide title='料理種類' />\n      <TextButtons list={types} select={filter.type} handleChange={handleInputChange} />\n    </div>\n  );\n}\n","import { SubTitleSlide } from '@/components';\nimport { PlusMinus } from './Buttons';\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n};\n\nexport function SelectSize({ filter, handleSizeChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='鍋子容量' />\n      <div className='flex items-center gap-3 pl-2 text-center font-bold'>\n        <PlusMinus n={-3} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={-1} handleSizeChange={handleSizeChange} />\n        <p className='flex h-12 w-12 flex-col justify-center rounded-full bg-amber-300 shadow-list-items'>\n          <span>{filter.size}</span>\n        </p>\n        <PlusMinus n={1} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={3} handleSizeChange={handleSizeChange} />\n        <PlusMinus n={filter.size} handleSizeChange={handleSizeChange} />\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Buttons } from '@/pages/List/components';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients } from '@/data';\n\nimport { Filter } from '../Meal';\n\ntype Props = {\n  filter: Filter;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function SelectIngredient({ filter, handleChickChange }: Props) {\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材' />\n      <Buttons\n        list={ingredients.map((ingredient) => ingredient.name)}\n        Icon={Icon.Game.Ingredient}\n        checkSet={filter.ingredients}\n        handleChange={handleChickChange}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon, SubTitleSlide } from '@/components';\nimport { ingredients, meals } from '@/data';\n\nimport { Filter } from '../Meal';\nimport { SelectCount } from './Buttons';\n\ntype Props = {\n  filter: Filter;\n  handleCountChange: (name: string, count: number) => void;\n};\n\ntype IngredientsCount = {\n  count: number; // -1 is not enough\n  list: number[];\n};\n\nconst ingredientMap = Object.fromEntries(\n  ingredients.map((ingredient) => [ingredient.name, ingredient.point]),\n);\n\nconst getCountList = (filter: Filter): Record<string, IngredientsCount> => {\n  return Object.fromEntries(\n    ingredients\n      .filter((ingredient) => filter.ingredients.has(ingredient.name))\n      .map((ingredient) => {\n        const countList = meals\n          .filter(\n            (meal) =>\n              meal.type === filter.type &&\n              meal.ingredients.reduce((sum, item) => sum + item.count, 0) <= filter.size &&\n              meal.ingredients.every((item) => filter.ingredients.has(item.name)),\n          )\n          .flatMap((meal) => meal.ingredients)\n          .filter((item) => item.name === ingredient.name)\n          .map((item) => item.count);\n\n        if (countList.length > 0) {\n          const list = [-1, ...new Set(countList)].sort((a, b) => a - b);\n          return [\n            ingredient.name,\n            {\n              count: list[list.length - 1],\n              list,\n            },\n          ];\n        }\n        return [\n          ingredient.name,\n          {\n            count: -1,\n            list: [],\n          },\n        ];\n      }),\n  );\n};\n\nexport function SelectIngredientCount({ filter, handleCountChange }: Props) {\n  if (filter.ingredients.size <= 0) {\n    return <></>;\n  }\n\n  const countList = getCountList(filter);\n\n  return (\n    <div className='space-y-4'>\n      <SubTitleSlide title='食材數量 (選至少滿足多少個)' />\n      <div className='grid grid-cols-1 gap-y-2 md:grid-cols-2'>\n        {Object.entries(countList)\n          .sort((a, b) => b[1].list.length - a[1].list.length)\n          .map(([key, val]) => {\n            return (\n              <div key={key} className='flex items-center gap-3'>\n                <div className='flex w-16 flex-col items-center'>\n                  <div className='h-12 w-12'>\n                    <Icon.Game.Ingredient name={key} />\n                  </div>\n                  <span\n                    className={clsx(\n                      '-mt-3 whitespace-nowrap',\n                      'rounded-full border-2 border-amber-300',\n                      'bg-white px-1 text-center text-xs font-medium',\n                    )}\n                  >\n                    {ingredientMap[key]}能量\n                  </span>\n                </div>\n                {val.list.length === 0 && '未用到 / 尚缺其他食材 / 鍋子容量不夠'}\n                {val.list.length > 0 &&\n                  val.list.map((count, i) => (\n                    <SelectCount\n                      name={key}\n                      key={count}\n                      n={count}\n                      min={val.list[1]}\n                      selected={\n                        filter.ingredientsCount[key] === undefined\n                          ? i === val.list.length - 1\n                          : filter.ingredientsCount[key] === count\n                      }\n                      handleCountChange={handleCountChange}\n                    />\n                  ))}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport { Filter } from '../Meal';\nimport { SelectType } from './SelectType';\nimport { SelectSize } from './SelectSize';\nimport { SelectIngredient } from './SelectIngredient';\nimport { SelectIngredientCount } from './SelectIngredientCount';\n\ntype Props = {\n  filter: Filter;\n  handleSizeChange: (n: number) => void;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleChickChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleCountChange: (name: string, count: number) => void;\n};\n\nexport function ToolBar({\n  filter,\n  handleInputChange,\n  handleSizeChange,\n  handleChickChange,\n  handleCountChange,\n}: Props) {\n  return (\n    <>\n      {/* type */}\n      <SelectType filter={filter} handleInputChange={handleInputChange} />\n      {/* size */}\n      <SelectSize filter={filter} handleSizeChange={handleSizeChange} />\n      {/* ingredients */}\n      <SelectIngredient filter={filter} handleChickChange={handleChickChange} />\n      {/* ingredient count */}\n      <SelectIngredientCount filter={filter} handleCountChange={handleCountChange} />\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Filter, Meal } from '../Meal';\nimport { Icon } from '@/components';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function CardBody({ meal, filter }: Props) {\n  return (\n    <div className='flex flex-col justify-between gap-y-1 p-2 pb-4'>\n      <h4 className='font-bold'>{meal.name}</h4>\n      <div className='flex items-center gap-x-2'>\n        <ul className='flex w-full items-center gap-6'>\n          {meal.ingredients.length > 0 ? (\n            meal.ingredients.map(({ name, count }) => (\n              <li className='relative flex items-center' key={name}>\n                <div\n                  className={clsx(\n                    'h-10 w-10 rounded-full p-1',\n                    'transition-all duration-300',\n                    filter.ingredients.has(name) &&\n                      (filter.ingredientsCount[name] === undefined\n                        ? true\n                        : filter.ingredientsCount[name] >= count)\n                      ? 'bg-amber-300'\n                      : 'bg-amber-100',\n                  )}\n                >\n                  <Icon.Game.Ingredient name={name} />\n                </div>\n                <span\n                  className={clsx(\n                    'absolute -bottom-1 -right-4 rounded-full',\n                    'border-2 border-amber-300 bg-white px-1 text-xs font-medium',\n                  )}\n                >\n                  ×{count}\n                </span>\n              </li>\n            ))\n          ) : (\n            <li className='relative flex items-center'>\n              <div className='h-10 w-10 rounded-full bg-amber-100 p-1'></div>\n              <span className='absolute -right-1 bottom-0 text-xs font-medium'>&gt;0</span>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Icon } from '@/components';\nimport { Filter, Meal } from '../Meal';\nimport { CardBody } from './CardBody';\n\ntype Props = {\n  filter: Filter;\n  meal: Meal;\n};\n\nexport function Card({ meal, filter }: Props) {\n  const match =\n    meal.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name)) &&\n    meal.ingredients.reduce((acc, curr) => acc + curr.count, 0) <= filter.size &&\n    meal.ingredients.every((ingredient) =>\n      filter.ingredientsCount[ingredient.name] === undefined\n        ? true\n        : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n    );\n\n  return (\n    <li\n      key={meal.name}\n      className={clsx(\n        'relative flex border-[1px]',\n        'items-center gap-0 overflow-hidden rounded-[12px]',\n        match ? 'border-custom-green' : 'border-amber-300',\n        'shadow-list-items',\n      )}\n    >\n      <div\n        className={clsx(\n          'relative flex h-full w-24 flex-col justify-center',\n          'transition-all duration-300',\n          match ? 'bg-custom-green/60' : 'bg-amber-100',\n        )}\n      >\n        <Icon.Game.Meal name={meal.name} />\n        <span className='absolute bottom-0 right-2 font-bold'>\n          {meal.ingredients.reduce((acc, { count }) => acc + count, 0)}\n        </span>\n      </div>\n      <CardBody filter={filter} meal={meal} />\n    </li>\n  );\n}\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { meals } from '@/data';\nimport { TitleSlide } from '@/components';\nimport { useWeek } from '@/components/contexts';\n\nimport { Card, ToolBar } from './components';\n\nexport type Filter = {\n  type: string;\n  size: number;\n  ingredients: Set<string>;\n  ingredientsCount: Record<string, number>;\n};\n\nexport type Meal = {\n  name: string;\n  type: string;\n  ingredients: {\n    name: string;\n    count: number;\n  }[];\n};\n\nfunction Meal() {\n  const { week, toggleMealType, toggleMealSize } = useWeek();\n\n  const [filter, setFilter] = useState<Filter>({\n    type: week.meal.type,\n    size: week.meal.size,\n    ingredients: new Set<string>(),\n    ingredientsCount: {},\n  });\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    toggleMealType(name);\n  };\n\n  const handleSizeChange = (n: number) => {\n    toggleMealSize(Math.min(Math.max(15, filter.size + n), 162));\n  };\n\n  const handleChickChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n\n    setFilter((prevSearch) => {\n      if (checked) {\n        prevSearch.ingredients.add(name);\n      } else {\n        prevSearch.ingredients.delete(name);\n        delete prevSearch.ingredientsCount[name];\n      }\n\n      return {\n        ...prevSearch,\n        ingredients: prevSearch.ingredients,\n        ingredientsCount: prevSearch.ingredientsCount,\n      };\n    });\n  };\n\n  const handleCountChange = (name: string, count: number) => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      ingredientsCount: Object.assign(prevSearch.ingredientsCount, { [name]: count }),\n    }));\n  };\n\n  const sortFn = (a: Meal, b: Meal) => {\n    if (filter.ingredients.size > 0) {\n      let aHas = a.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      let bHas = b.ingredients.some((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n      bHas = b.ingredients.every((ingredient) => filter.ingredients.has(ingredient.name));\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n\n      aHas = a.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n      bHas = b.ingredients.every((ingredient) =>\n        filter.ingredientsCount[ingredient.name] === undefined\n          ? true\n          : filter.ingredientsCount[ingredient.name] >= ingredient.count,\n      );\n\n      if (aHas !== bHas) {\n        return aHas ? -1 : 1;\n      }\n    }\n\n    const aCount = a.ingredients.reduce((acc, { count }) => acc + count, 0);\n    const bCount = b.ingredients.reduce((acc, { count }) => acc + count, 0);\n\n    if (aCount !== bCount) {\n      return aCount - bCount;\n    }\n\n    return a.ingredients.length - b.ingredients.length;\n  };\n\n  useEffect(() => {\n    document.title = `Sleep Meals`;\n  }, []);\n\n  useEffect(() => {\n    setFilter((prevSearch) => ({\n      ...prevSearch,\n      type: week.meal.type,\n      size: week.meal.size,\n    }));\n  }, [week.meal]);\n\n  return (\n    <div className='flex flex-col gap-4 pt-4'>\n      <ToolBar\n        filter={filter}\n        handleInputChange={handleInputChange}\n        handleSizeChange={handleSizeChange}\n        handleChickChange={handleChickChange}\n        handleCountChange={handleCountChange}\n      />\n      {/* list */}\n      <div className='flex flex-col gap-y-4'>\n        <TitleSlide title='清單' />\n        <ul className={clsx('gap-4', 'grid grid-cols-1', 'md:grid-cols-2')}>\n          {meals\n            .filter((meal) => {\n              if (meal.ingredients.length === 0 && filter.ingredients.size > 0) {\n                return false;\n              }\n              return meal.type === filter.type;\n            })\n            .sort(sortFn)\n            .map((meal) => (\n              <Card key={meal.name} filter={filter} meal={meal} />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Meal;\n"],"names":["Card","_ref","_sleepType","_sleepType2","_pm$locations","pm","filter","groupBy","displayLevel","sleepType","locations","Object","keys","find","location","has","sleepStyle","concat","level","subLevel","_jsxs","className","children","pid","slice","_jsx","clsx","TypeBgClass","Type","type","Icon","name","sleep_type","specialty","_Fragment","Array","berry_quantity","fill","map","_","index","berry","ingredients","length","ingredient","style","sleep","SearchBar","value","onChange","placeholder","Buttons","list","checkSet","handleChange","prefixKey","item","CheckboxItem","label","checked","size","TextButtons","_ref2","select","CheckboxTextItem","key","Filter","id","htmlFor","Category","Indicator","SelectFilter","handleChickChange","handleFirstChange","handleCheckChange","Toggle","text","isUseSnorlaxLocations","isUseSnorlaxBerries","displayFilter","SubTitleSlide","title","berries","onlyFirstIngredient","specialties","skills","areas","area","SelectGroup","handleGroupByChange","groupBySelect","displayGroupBy","PlusMinus","n","handleSizeChange","displayNum","onClick","SelectCount","_ref3","min","selected","handleCountChange","SelectType","handleInputChange","SelectSize","SelectIngredient","ingredientMap","fromEntries","point","getCountList","countList","meals","meal","reduce","sum","count","every","flatMap","_toConsumableArray","Set","sort","a","b","SelectIngredientCount","entries","_slicedToArray","val","i","undefined","ingredientsCount","ToolBar","CardBody","match","acc","curr","_useWeek","useWeek","week","toggleMealType","toggleMealSize","_useState","useState","_useState2","setFilter","useEffect","document","prevSearch","_objectSpread","event","target","Math","max","_event$target","add","delete","assign","_defineProperty","TitleSlide","aHas","some","bHas","aCount","bCount"],"sourceRoot":""}